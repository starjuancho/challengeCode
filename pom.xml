<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.0.3.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.challenge</groupId>
	<artifactId>weather-search</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>weatherSearch</name>
	<description>Demo project for Spring Boot</description>

	<properties>
		<java.version>1.8</java.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
       
		<dependency>
    		<groupId>org.apache.tomcat</groupId>
    		<artifactId>tomcat-jasper</artifactId>
    		<version>9.0.1</version>
		</dependency>
       
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<scope>provided</scope>
		</dependency>
	

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		
		<dependency>
			<groupId>org.codehaus.sonar-plugins.java</groupId>
			<artifactId>sonar-jacoco-listeners</artifactId>
			<version>3.2</version>
			<scope>test</scope>
		</dependency>
	</dependencies>
	
	<profiles>
	  <profile>
			<id>development_reporting</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<reporting>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-project-info-reports-plugin</artifactId>
						<version>2.7</version>
						<configuration>
							<dependencyLocationsEnabled>false</dependencyLocationsEnabled>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>findbugs-maven-plugin</artifactId>
						<version>3.0.5</version>
						<configuration>
							<!-- Enables analysis which takes more memory but finds more bugs. 
								If you run out of memory, changes the value of the effort element to 'low'. -->
							<effort>Max</effort>
							<!-- Reports all bugs (other values are medium and max) -->
							<threshold>Max</threshold>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-checkstyle-plugin</artifactId>
						<version>3.0.0</version>
						<configuration>
							<configLocation>google_checks.xml</configLocation>
							<excludes />
						</configuration>
						<reportSets>
							<reportSet>
								<reports>
									<report>checkstyle</report>
								</reports>
							</reportSet>
						</reportSets>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-pmd-plugin</artifactId>
						<version>3.8</version>
						<configuration>
							<excludes>
								<!-- <exclude>**/NetkeyInquiryTibcoResponse.*</exclude> -->
								<!-- <exclude>**/NetkeyInquiryResponse.*</exclude> -->
								<!-- <exclude>**/model/ErrorResponse.*</exclude> -->
							</excludes>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.jacoco</groupId>
						<artifactId>jacoco-maven-plugin</artifactId>
						<version>0.8.0</version>
						<configuration>
							<excludes>
								<exclude>**/model/**/*</exclude>
								<exclude>**/*Application*.*</exclude>	
								<exclude>**/*constant/**/*</exclude>
								<exclude>**/*domain/**/*</exclude>
							</excludes>
						</configuration>
						<reportSets>
							<reportSet>
								<reports>
									<!-- select non-aggregate reports -->
									<report>report</report>
								</reports>
							</reportSet>
						</reportSets>
					</plugin>
				</plugins>
			</reporting>
		</profile>
	</profiles>
	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<properties>
						<property>
							<name>listener</name>
							<value>org.sonar.java.jacoco.JUnitListener</value>
						</property>
					</properties>
					<skipTests>false</skipTests>
					<skipExec>false</skipExec>
					<reportsDirectory>${project.basedir}/target/surefire-reports</reportsDirectory>
					<failIfNoTests>false</failIfNoTests>
					<testFailureIgnore>true</testFailureIgnore>
					<test>${jar.unit.test.class}</test>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.8.0</version>
				<configuration>
					<excludes>						
						<exclude>**/model/**/*</exclude>
						<exclude>**/exceptions/**/*</exclude>
						<exclude>**/*constant/**/*</exclude>
						<exclude>**/*domain/**/*</exclude>		
						<exclude>**/*Application*.*</exclude>	
					</excludes>
				</configuration>
				<executions>
					<execution>
						<id>default-prepare-agent</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<execution>
						<id>default-report</id>

						<goals>
							<goal>report</goal>
						</goals>
					</execution>
					<execution>
						<id>default-check</id>
						<goals>
							<goal>check</goal>
						</goals>
						<configuration>

							<rules>
								<rule implementation="org.jacoco.maven.RuleConfiguration">
									<element>BUNDLE</element>
									<limits>
										<limit implementation="org.jacoco.report.check.Limit">
											<counter>COMPLEXITY</counter>
											<value>COVEREDRATIO</value>
											<minimum>0</minimum>
										</limit>
									</limits>
								</rule>
							</rules>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
		
		
	</build>

</project>
